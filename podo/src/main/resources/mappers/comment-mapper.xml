<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="commentMapper">
	
	<resultMap id="commentResultSet" type="comment">
		<id property="id" column="id"/>
		<result property="type" column="type"/>
		<result property="targetId" column="target_id"/>
		<result property="content" column="content"/>
<!-- 		<result property="viewCount" column="view_count"/> -->
		<result property="inappropriateCount" column="inappropriate_count"/>
		<result property="spoilerCount" column="spoiler_count"/>
		<result property="likeCount" column="like_count"/>
		<result property="modifyDate" column="modify_date"/>
		<result property="createDate" column="create_date"/>
		<result property="memberId" column="member_id"/>
		<result property="memberImage" column="image"/>
		<result property="nickname" column="nickname"/>
<!-- 		<result property="parentMemberId" column="parent_member_id"/> -->
<!-- 		<result property="parentMemberNickname" column="parent_member_nickname"/> -->
	</resultMap>
	
	<select id="selectCommentList" resultMap="commentResultSet">
				SELECT LPAD(' ', 2 * (LEVEL - 1)) || C.CONTENT AS CONTENT,
				       C.ID, C.TYPE, C.TARGET_ID, LEVEL,
				       C.INAPPROPRIATE_COUNT, C.SPOILER_COUNT, C.LIKE_COUNT,
				       C.CREATE_DATE, C.MODIFY_DATE,
				       C.MEMBER_ID, M.NICKNAME, M.IMAGE,
				       C2.MEMBER_ID AS PARENT_MEMBER_ID,
				       (SELECT NICKNAME FROM TB_MEMBER WHERE ID = C2.MEMBER_ID) AS PARENT_MEMBER_NICKNAME
				  FROM TB_COMMENT C
				  LEFT OUTER JOIN TB_COMMENT C2 ON (C2.ID = C.PARENT_ID)
		INNER JOIN TB_MEMBER M ON (C.MEMBER_ID = M.ID)
				 WHERE C.TYPE = #{ type }
				   AND C.TARGET_ID = #{ tid }
				   AND C.STATUS = 'Y'
		START WITH C.PARENT_ID IS NULL
		CONNECT BY PRIOR C.ID = C.PARENT_ID
	</select>
	
	<insert id="insertComment">
		INSERT INTO TB_COMMENT
			(ID, TYPE, TARGET_ID, CONTENT,
			 INAPPROPRIATE_COUNT, SPOILER_COUNT, LIKE_COUNT,
			 CREATE_DATE, MODIFY_DATE, STATUS, MEMBER_ID, PARENT_ID)
		VALUES
			(SEQ_COMMENT_ID.NEXTVAL, #{ type }, #{ targetId }, #{ content },
			 DEFAULT, DEFAULT, DEFAULT,
			 SYSDATE, SYSDATE, DEFAULT, #{ memberId }, #{ parentId })
	</insert>
	
	<update id="updateComment">
		UPDATE TB_COMMENT
		SET CONTENT = #{ content }
		WHERE ID = #{ id }
	</update>
	
	<update id="deleteComment">
		UPDATE TB_COMMENT
		SET STATUS = 'N'
		WHERE ID IN (SELECT C.ID
		             FROM TB_COMMENT C
		             WHERE C.TYPE = #{ type }
		               AND C.TARGET_ID = #{ targetId }
		             START WITH PARENT_ID = #{ id }
		             CONNECT BY PRIOR C.ID = C.PARENT_ID)
		   OR ID = #{ id }
	</update>
	
</mapper>