<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="memberMapper">
	
	<resultMap type="Member" id="memberResultSet">
		<id property="id" column="id"/>
		<result property="image" column="image"/>
		<result property="email" column="email"/>
		<result property="pwd" column="pwd"/>
		<result property="nickName" column="nickname"/>
		<result property="status" column="status"/>
		<result property="enrollDate" column="enroll_date"/>
		<result property="modifyDate" column="modify_date"/>
		<result property="googleId" column="google_id"/>
		<result property="kakaoId" column="kakao_id"/>
		<result property="autho" column="autho"/>
		<result property="blackName" column="blackName"/>
		<result property="blackDate" column="blackDate"/>
		<result property="block" column="block"/>
		<result property="reportCount" column="report_count"/>
		
	</resultMap>
	
	<insert id="insertMember">
		insert into tb_member values(seq_member_id.nextval, #{image}, #{email}, #{pwd}, #{nickName}, default, sysdate, sysdate, null, null, default)
	</insert>
	
	<select id="idCheck" resultType="_int">
		select count(*)
		from tb_member
		where email=#{email} and status='Y'
	</select>
	
	<select id="nickCheck" resultType="_int">
		select count(*)
		from tb_member
		where nickname=#{nick} and status='Y'
	</select>
	
	<select id="selectLoginMember" resultMap="memberResultSet">
		select *
		from tb_member
		where email=#{email}
			and status='Y'
	</select>
	
	<update id="updateMember">
		update tb_member 
		
		<if test='updatePwd != ""'>	<!-- 비밀번호 변경O -->
			set pwd=#{pwd}, modify_date=sysdate
		</if>
		
		<if test='updatePwd == ""'> <!-- 비밀번호 변경X -->
			set image=#{image}, email=#{email}, nickname=#{nickName}, modify_date=sysdate
		</if>
		where id=#{id} and status='Y'
	</update>
	
	
	
	
	
	<select id="getMemberListCount" resultType="_int">
		select count(*)
		from tb_member
	</select>
	
	<select id="selectMemberList" resultMap="memberResultSet">
		SELECT A.*,
		        (SELECT CASE WHEN COUNT(B.target_id) >= 1
		                     THEN 'Y'
		                     ELSE 'N'
		                     END
		          FROM tb_black_member B
		         WHERE B.target_id = A.id) AS block,
		        (SELECT COUNT(C.reported_id)
		          FROM tb_report C
		         WHERE C.reported_id = A.id) AS report_count
		  FROM tb_member A
		 ORDER BY A.id
	</select>
	
	
	<select id="getBlackListCount" resultType="_int">
		select count(*)
		from tb_member m
		join tb_black_member b on (m.id = b.target_id)
		where m.status='Y'
		
	</select>
	
	<select id="selectBlackList" resultMap="memberResultSet">
		select b.id, email, nickname as blackName, blackDate
		from tb_member m
		join tb_black_member b on (m.id = b.target_id)
		where m.id = b.target_id and m.status='Y'
		order by blackDate
	</select>
	
	
	
	
	
</mapper>